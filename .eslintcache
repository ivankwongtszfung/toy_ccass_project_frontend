[{"/Users/ivankwong/Documents/toy_ccass_project_frontend/src/index.js":"1","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/reportWebVitals.js":"2","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/App.js":"3","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/lib/canvasjs.react.js":"4","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/CCASS/ShareholdingGraph.js":"5","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/CCASS/CCASSForm.js":"6","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/CCASS/TransactionFinder.js":"7","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/lib/canvasjs.min.js":"8","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/MaterialTable.js":"9"},{"size":500,"mtime":1612626949061,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1612626949064,"results":"12","hashOfConfig":"11"},{"size":2747,"mtime":1612635644398,"results":"13","hashOfConfig":"11"},{"size":2024,"mtime":1612626949064,"results":"14","hashOfConfig":"11"},{"size":4207,"mtime":1612635493703,"results":"15","hashOfConfig":"11"},{"size":2222,"mtime":1612635550718,"results":"16","hashOfConfig":"11"},{"size":2226,"mtime":1612635529910,"results":"17","hashOfConfig":"11"},{"size":479522,"mtime":1612626949063,"results":"18","hashOfConfig":"11"},{"size":2309,"mtime":1612631941031,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"15846fu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/ivankwong/Documents/toy_ccass_project_frontend/src/index.js",[],["42","43"],"/Users/ivankwong/Documents/toy_ccass_project_frontend/src/reportWebVitals.js",[],"/Users/ivankwong/Documents/toy_ccass_project_frontend/src/App.js",["44","45","46"],"/Users/ivankwong/Documents/toy_ccass_project_frontend/src/lib/canvasjs.react.js",["47"],"ï»¿/*\nCanvasJS React Charts - https://canvasjs.com/\nCopyright 2021 fenopix\n\n--------------------- License Information --------------------\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\nhttps://canvasjs.com/license/\n\n*/\nvar React = require('react');\nvar CanvasJS = require('./canvasjs.min');\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\n\nclass CanvasJSChart extends React.Component {\n\tstatic _cjsContainerId = 0\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.options = props.options ? props.options : {};\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\n\t}\n\tcomponentDidMount() {\n\t\t//Create Chart and Render\t\t\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\n\t\tthis.chart.render();\n\n\t\tif (this.props.onRef)\n\t\t\tthis.props.onRef(this.chart);\n\t}\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\t//Check if Chart-options has changed and determine if component has to be updated\n\t\treturn !(nextProps.options === this.options);\n\t}\n\tcomponentDidUpdate() {\n\t\t//Update Chart Options & Render\n\t\tthis.chart.options = this.props.options;\n\t\tthis.chart.render();\n\t}\n\tcomponentWillUnmount() {\n\t\t//Destroy chart and remove reference\n\t\tthis.chart.destroy();\n\t\tif (this.props.onRef)\n\t\t\tthis.props.onRef(undefined);\n\t}\n\trender() {\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\n\t}\n}\n\nvar CanvasJSReact = {\n\tCanvasJSChart: CanvasJSChart,\n\tCanvasJS: CanvasJS\n};\n\nexport default CanvasJSReact;","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/CCASS/ShareholdingGraph.js",["48","49"],"import React, { useState, useEffect } from \"react\";\n\nimport CustomMaterialTable from \"../MaterialTable\";\nimport { CanvasJSChart } from \"../App\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nexport default function ShareholdingGraph(props) {\n  const [shareholding, setShareholding] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const { stock_code, start_date, end_date } = props;\n  const [open, setOpen] = React.useState(\"\");\n\n  const params = {\n    stock_code,\n    start_date,\n    end_date,\n  };\n  useEffect(() => {\n    console.log(params);\n    const url = new URL(\"http://127.0.0.1:5000/ccass/top_ten_shareholding\");\n    const parse_data = {};\n    const id_name_mapping = {};\n    url.search = new URLSearchParams(params).toString();\n    setShareholding([]);\n    setTableData([]);\n    setOpen(\"\");\n\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(`${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then((responses) => {\n        console.log(responses);\n        const parseTableData = [];\n        Object.keys(responses).forEach(function (date) {\n          responses[date].forEach((data, index) => {\n            const ranking = index + 1;\n            parseTableData.push({\n              date: date,\n              ...data,\n              ranking,\n            });\n            const participate_id = data[\"participant-id\"];\n            id_name_mapping[participate_id] = data[\"participant-name\"];\n            if (!(participate_id in parse_data)) {\n              parse_data[participate_id] = [{ y: ranking, x: new Date(date) }];\n            } else {\n              parse_data[participate_id].push({\n                y: ranking,\n                x: new Date(date),\n              });\n            }\n          });\n          setTableData(parseTableData);\n          Object.keys(parse_data).forEach((participate_id) => {\n            parse_data[participate_id].sort((a, b) => {\n              return b[\"x\"] - a[\"x\"];\n            });\n          });\n          console.log(parse_data);\n        });\n        const dataPoints = [];\n        if (parse_data) {\n          Object.keys(parse_data).map((participant) => {\n            console.log(participant);\n            dataPoints.push({\n              type: \"line\",\n              name: id_name_mapping[participant],\n              showInLegend: true,\n              dataPoints: parse_data[participant],\n            });\n          });\n          console.log(dataPoints);\n          setShareholding(dataPoints);\n        }\n      })\n      .catch((error) => {\n        setOpen(`Response not OK ${error}`);\n        return;\n      });\n  }, [params.stock_code, params.start_date, params.end_date]);\n\n  return (\n    <>\n      {open && (\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {open}\n        </Alert>\n      )}\n      <div>\n        {shareholding.length > 0 && (\n          <>\n            <CanvasJSChart\n              options={{\n                animationEnabled: true,\n                itle: {\n                  text: \"CCASS Shareholding\",\n                },\n                axisY: {\n                  title: \"Top 10 Shareholding\",\n                  reversed: true,\n                },\n                toolTip: {\n                  shared: true,\n                },\n                data: shareholding,\n              }}\n            />\n            <CustomMaterialTable\n              columns={[\n                { title: \"Date\", field: \"date\", type: \"datetime\" },\n                { title: \"Participate Id\", field: \"participant-id\" },\n                { title: \"Participate Name\", field: \"participant-name\" },\n                {\n                  title: \"Shareholding\",\n                  field: \"shareholding\",\n                  type: \"numeric\",\n                },\n                {\n                  title: \"shareholding percent\",\n                  field: \"shareholding-percent\",\n                  type: \"numeric\",\n                },\n              ]}\n              data={tableData}\n              title=\"top 10 participate\"\n              options={{\n                filtering: true,\n              }}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/CCASS/CCASSForm.js",[],"/Users/ivankwong/Documents/toy_ccass_project_frontend/src/CCASS/TransactionFinder.js",["50","51"],"import React, { useState, useEffect } from \"react\";\nimport CustomMaterialTable from \"../MaterialTable\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nexport default function TransactionFinder(props) {\n  const [transaction, setTransaction] = useState([]);\n  const { stock_code, start_date, end_date, threshold } = props;\n  const [open, setOpen] = React.useState(\"\");\n  const params = {\n    stock_code,\n    start_date,\n    end_date,\n    threshold,\n  };\n\n  React.useEffect(() => {\n    console.log(params);\n    const url = new URL(\"http://127.0.0.1:5000/ccass/shareholding_threshold\");\n    url.search = new URLSearchParams(params).toString();\n    setTransaction([]);\n    setOpen(\"\");\n\n    if (params.threshold) {\n      fetch(url)\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(`${response.statusText}`);\n          }\n          return response.json();\n        })\n        .then((responses) => {\n          const result = [];\n          Object.keys(responses).forEach(function (date) {\n            Object.keys(responses[date]).forEach(function (participateId) {\n              result.push({\n                date,\n                participateId,\n                holdingChange: responses[date][participateId],\n              });\n            });\n          });\n          setTransaction(result);\n        })\n        .catch((error) => {\n          setOpen(`Response not OK ${error}`);\n          return;\n        });\n    }\n  }, [params.stock_code, params.start_date, params.end_date, params.threshold]);\n  return (\n    <>\n      {open && (\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {open}\n        </Alert>\n      )}\n      <div style={{ maxWidth: \"100%\" }}>\n        {transaction.length > 0 && (\n          <CustomMaterialTable\n            columns={[\n              { title: \"Date\", field: \"date\", type: \"datetime\" },\n              { title: \"Participate Id\", field: \"participateId\" },\n              {\n                title: \"Changes in %\",\n                field: \"holdingChange\",\n                type: \"numeric\",\n              },\n            ]}\n            data={transaction}\n            title=\"Transaction Finder\"\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","/Users/ivankwong/Documents/toy_ccass_project_frontend/src/lib/canvasjs.min.js",[],"/Users/ivankwong/Documents/toy_ccass_project_frontend/src/MaterialTable.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":5,"column":10,"nodeType":"58","messageId":"59","endLine":5,"endColumn":16},{"ruleId":"56","severity":1,"message":"60","line":15,"column":8,"nodeType":"58","messageId":"59","endLine":15,"endColumn":18},{"ruleId":"56","severity":1,"message":"61","line":18,"column":7,"nodeType":"58","messageId":"59","endLine":18,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":1,"column":1,"nodeType":"64","messageId":"65","fix":"66"},{"ruleId":"67","severity":1,"message":"68","line":67,"column":53,"nodeType":"69","messageId":"70","endLine":67,"endColumn":55},{"ruleId":"71","severity":1,"message":"72","line":84,"column":6,"nodeType":"73","endLine":84,"endColumn":61,"suggestions":"74"},{"ruleId":"56","severity":1,"message":"75","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"76","line":49,"column":6,"nodeType":"73","endLine":49,"endColumn":79,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'CanvasJS' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"80","text":"81"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'useEffect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",[-1,0],"",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [params.stock_code, params.start_date, params.end_date, params]",{"range":"88","text":"89"},"Update the dependencies array to be: [params.stock_code, params.start_date, params.end_date, params.threshold, params]",{"range":"90","text":"91"},[2654,2709],"[params.stock_code, params.start_date, params.end_date, params]",[1451,1524],"[params.stock_code, params.start_date, params.end_date, params.threshold, params]"]